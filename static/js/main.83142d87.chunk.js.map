{"version":3,"sources":["components/PokemonThumb.js","App.js","index.js"],"names":["capitalize","string","toUpperCase","slice","Modal","setAppElement","PokemonThumb","id","image","name","type","data","useState","modalIsOpen","setModalIsOpen","style","className","onClick","src","alt","isOpen","shouldCloseOnOverlayClick","onRequestClose","overlayClassName","abilities","map","item","index","ability","moves","move","stats","base_stat","stat","App","allPokemons","setAllPokemons","loadMore","setLoadMore","getAllPokemons","createPokemonObject","a","results","forEach","pokemon","fetch","res","json","currentList","next","sort","b","useEffect","pokemonStats","sprites","other","dream_world","front_default","types","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83142d87.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction capitalize(string) {\r\n    return string[0].toUpperCase() + string.slice(1)\r\n}\r\n\r\nconst PokemonThumb = ({ id, image, name, type, data }) => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false)\r\n    const style = type + \" thumb-container\";\r\n    function details() {\r\n        setModalIsOpen(true)\r\n    }\r\n    return (\r\n        <>\r\n            <div className={style} onClick={details}>\r\n                <div className=\"number\"><small>#{id}</small></div>\r\n                <img src={image} alt={name} />\r\n                <div className=\"detail-wrapper\">\r\n                    <h3>{capitalize(name)}</h3>\r\n                    <small>Type: {type}</small>\r\n                </div>\r\n            </div>\r\n            <Modal isOpen={modalIsOpen}\r\n                shouldCloseOnOverlayClick={true}\r\n                onRequestClose={() => setModalIsOpen(false)}\r\n                className=\"Modal\"\r\n                overlayClassName=\"Overlay\"\r\n            >\r\n                <div className=\"modal-container\">\r\n                    <div className=\"poke-profile\">\r\n                        <div className={style}>\r\n                            <div className=\"number\"><small>#{id}</small></div>\r\n                            <img src={image} alt={name} />\r\n                            <div className=\"detail-wrapper\">\r\n                                <h3>{capitalize(name)}</h3>\r\n                                <small>Type: {type}</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"poke-details\">\r\n                        <table>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className={\"poke-details-title\"}>Abilities</td>\r\n                                    <td>{modalIsOpen && data[id - 1].abilities.map((item, index) => {\r\n                                        return <span key={\"ability\" + index} className={\"abilities\"}>{capitalize(item.ability.name)}</span>\r\n                                    })}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className={\"poke-details-title\"}>Moves</td>\r\n                                    <td>{modalIsOpen && data[id - 1].moves.map((item, index) => {\r\n                                        return <span key={\"move\" + index} className={\"moves\"}>{capitalize(item.move.name)}</span>\r\n                                    })}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className={\"poke-details-title\"}>Stats</td>\r\n                                    <td>{modalIsOpen && data[id - 1].stats.map((item, index) => {\r\n                                        return <span key={\"stats\" + index} className={\"stats\"}>{item.base_stat + \" \" + capitalize(item.stat.name)}</span>\r\n                                    })}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className={\"close-modal\"}><button onClick={() => setModalIsOpen(false)}>X</button></div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokemonThumb\r\n","import React, { useEffect, useState } from 'react'\r\nimport PokemonThumb from './components/PokemonThumb'\r\n\r\nconst App = () => {\r\n\r\n  const [allPokemons, setAllPokemons] = useState([])\r\n  const [loadMore, setLoadMore] = useState('https://pokeapi.co/api/v2/pokemon?limit=20')\r\n\r\n  const getAllPokemons = async () => {\r\n    const res = await fetch(loadMore)\r\n    const data = await res.json()\r\n    setLoadMore(data.next)\r\n\r\n    function createPokemonObject(results) {\r\n      results.forEach(async pokemon => {\r\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`)\r\n        const data = await res.json()\r\n        setAllPokemons(currentList => [...currentList, data])\r\n      })\r\n    }\r\n    createPokemonObject(data.results)\r\n  }\r\n  allPokemons.sort((a, b) => a.id - b.id)\r\n  useEffect(() => {\r\n    getAllPokemons()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"app-contaner\">\r\n        <div className=\"title\">\r\n          <span>Pok√©mon</span>\r\n          <span>Gotta catch 'em all</span>\r\n        </div>\r\n        <div className=\"pokemon-container\">\r\n          <div className=\"all-container\">\r\n            {allPokemons.map((pokemonStats, index) =>\r\n              <PokemonThumb\r\n                key={index}\r\n                id={pokemonStats.id}\r\n                image={pokemonStats.sprites.other.dream_world.front_default}\r\n                name={pokemonStats.name}\r\n                type={pokemonStats.types[0].type.name}\r\n                data={allPokemons}\r\n              />)}\r\n\r\n          </div>\r\n          <button className=\"load-more\" onClick={() => getAllPokemons()}>Load more</button>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}